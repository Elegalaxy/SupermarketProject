SCRIPT DOCUMENTATION

Terminal.h
	Terminal() - start ncurses and initialise everything
	~Terminal() - end ncurses
	int getKey() - get  empty input from user
	WINDOW *createWin(int y, int x, int startY, int startX) - create a window with size of y, x, and start from startY, startX, return window pointer

Player.h
	Player(WINDOW* window, int y, int x, char c) - take a window and cordinate (y, x) and a char to represent player
	int getmv() - take input from user and move the character (arrow keys) or ability, and return the choice (press x to exit game)
	void display() - display character
	void addItem() - remove item from player
	bool addItem(string item) - add item to player, return true if success
	string getInventory() - return player current item
	int getPos(char p) - return y location if p is 'y', return x location if p is 'x'
	Product checkBlock(int y, int x) - check if there is a interactable block and return the details of it
	Product getBlockDetail(int y, int x) - get block detail from y, x
	int getRackIDByLoc(int y, int x) - return found rack id from the y and x of user interact
	Product getProductByRack(int y, Rack r) - return the product from rack base on the y user interact
	Rack returnRackByID(int ID) - return the rack by ID

Product.h
	Product(string) - take a string to initialise its name
	string getName() - return product's name
	
Rack.h
	Rack(WINDOW * win, int yy, int xx, int yyStart, int xxStart, vector<Product> p): Block(name) - basically the drawBox function, but it could store data for every racks
	int getID() - return id of this rack
	void setRack() - set the rack with products
	int getLocation(char p) - return the location base on the p is 'x' or 'y'
	int getSize(char s) - return the size of the rack base on the s is 'x' or 'y'
	Product getProductByY(int y) - return product base on index
	
Block.h
	Block(string n) -  initialize with block name
	void drawBox(WINDOW * win, int y, int x, int yStart, int xStart, char c) - create a box base on the start point and size, surround with border of c
	string getName() - return block name